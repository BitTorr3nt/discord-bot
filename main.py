import requests
import schedule
import time
import asyncio

WEBHOOK_URL = "https://discordapp.com/api/webhooks/1360247632764731442/t1SxokkWvuyTxNgNJDIhTczIloIYFWvzuOxFfs-akHx2fN3cBY03aoXVNvvaPG4tgyOv"  # Byt till din riktiga webhook

async def send_poll():
    """ Skickar omr√∂stningen via en Discord-webhook. """
    poll_text = (
        "**Hoppas ni har haft en fin vecka! Nu blickar vi fram√•t.**\n"
        "**Vilket av dessa √§mnen vill ni l√§ra er om p√• m√•ndag?**\n"
        "‚è™ Reversing\n"
        "#Ô∏è‚É£ Crypto\n"
        "üí° Hardware\n"
        "üåê Web\n"
        "‚õèÔ∏è Pwn\n"
        "üîç Forensics"


       "                                                       "
    "obs:*F√∂r att kunna r√∂sta, s√• m√•ste du reagera med en emoji*"  
    
    
    
    )  

    payload = {
        "content": poll_text,
        "username": "CTF-Bot",  # valfritt visningsnamn
    }

    try:
        response = requests.post(WEBHOOK_URL, json=payload)
        if response.status_code in [200, 204]:
            print("‚úÖ Omr√∂stning skickades via webhook.")
        else:
            print(f"‚ùå Fel vid skickning: {response.status_code} ‚Äì {response.text}")
    except Exception as e:
        print(f"‚ö†Ô∏è Undantag vid skickning: {e}")

def schedule_poll():

    schedule.every().friday.at("15:57").do(lambda: asyncio.create_task(send_poll()))

async def main():
    schedule_poll()
    while True:
        schedule.run_pending()
        await asyncio.sleep(1)

if __name__ == "__main__":
    asyncio.run(main())